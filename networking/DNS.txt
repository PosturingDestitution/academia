what is the DNS?

	the DNS is a hierarchical distributed database that maps human-readable domain names to numerical Internet Protocol (IP) address. it is a critical componnent of the internet infrastructure, facilitating communication between devices on differenet networks. the dns consists of a hierarchical structure of interconnected servers, known as name servers, that store and manage this mapping information	

what is a domain?
	a domain (short for domain name) is a unique identifier on the internet that represents an organization, buisness, or individual's online presence. it is essentially a human-readable address that maps to an IP address

	a typical domain consists of several parts:
	1. TLD (top): the highest level in the domain hierarchy, such as '.com', '.org', '.net', or country-code TLDs like '.us' or '.uk'
	2. SLD (second): the next level down, which is usually the name of the organization or buisness, such as 'example' in 'example.com'
	3. subdomain: optional subdomains that can be added to create a more specific address, like 'blog.example.com' or 'store.example.com'

	domain types:
	1. generic TLD .com .org .net .etc
	2. country code TLD .us .uk .ca
	3. special-purpose TLD .edu .gov

	domains make it easier for users to remeber and type in website addresses
	each domain is unique, preventing conflics between websites with the same name
	domains can be used to create subdomains, making it easy to manage multiple websites or services under a single umbrealla

what is a resource/url/uri etc.?

	a resource is an entity that can be accessed, manipulated, or retrieved by a system. it can be anything from a simple data point to a complex object or service. resources are often thought of as nouns, and they can be tangible (e.g., a book) or intangible (e.g., a weather forecast)	
	a uniform resource identifier (URI) is a string that identifies a resource on the internet. it is similar to a uniform resource locator (URL), but more flexible. a URI can be used to indentify any type of resource, not just web pages. components of URI:
		1. scheme: the scheme specifies the protocol used to access the resource (e.g., 'http', 'https', 'ftp')
		2. authority: the authority identifies the server or host that provides the resource (e.g., example.com). this is optional for some schemes.
		3. path: the path specifies the location of the resources on the server (e.g., '/path/to/resource')
		4. query: the query string contains additional information about the request, typically in the form of key-value pairs separated by ampersands (e.g., '?param1=value1&param2=value2')
		5. fragment: the fragment is a reference to a specific part of the resource (e.g., '#anchor')

	https://example.com/path/to/resource?param1=value&param2=value2#anchor

what is the job of the resolver (operating system or provided by ISP)? what types are there?

	in the context of DNS, a resolver is a program or service that performs that following:
	1. given a fully qualified comain name or hostname, it retrieves the corresponding IP address from a DNS server
	2. it sends requests to a DNS server and interprets the responses received in return

	there are two main types:
	1. stub resolver: a stub resolver is a simple DNS resolver that only performs the basic resolution function. it sends DNS requests to a recursive DNS server and receives responses, but it does not cache any results or perform additional processing. stub resolvers are often used in application or services where DNS resolution is a one-time operation
	2. recursive resolver: a recursive resolver, also known as a caching DNS resolver, performs both the basic resolution function and caching of DNS records. it sends DNS requests to other DNS servers (authoritative for the domain) if necessary, but it also caches responses to reduce the number of subsequent queries. this allows for faster response times and reduced load on upstream DNS servers

	recursive resolvers typically run on a local machine or network device, such as a router or firewall, and are often used in larger networks where multiple devices need to share the same DNS resolution functionality

	in addition to these two types, there are other variations of resolvers, including:
	1. forwarding resolver: a resolver that forwards DNS requests to another resolver to server
	2. split-horizon DNS resolver: a resolver that provides different answers depending on the client's IP address (e.g., different results for internal and external clients)
	3. DNS proxy resolver: a resolver that acts as a middleman between a client and a recursive DNS server, modifying or filtering DNS responses


what are root name servers?

	these are a group of 13 special DNS servers that serve as the highest level of authority in the global DNS. they are responsible for point to TLD name servers, which then direct requests to authoritative name servers
	the root name servers are managed by various organizations around the world and are designated by ICANN, the organiztion that oversees the global DNS. the 13 root server names are:
	A.root-servers.net
	B.root-servers.net
	C.root-servers.net
	D.root-servers.net
	E.root-servers.net
	F.root-servers.net
	G.root-servers.net
	H.root-servers.net
	I.root-servers.net
	J.root-servers.net
	K.root-servers.net
	L.root-servers.net
	M.root-servers.net

what are TLD servers?

	these are the servers that manage a specific domain extension such as .com, .org. or .net. they are responsible for resolving domain names to IP addresses within their respective domains. for example:
	the tld server for .com is VeriSign's Global Registry Services
	the tld server for .org is Public Interest Registry (PIR)
	the tld server for .net is VeriSign's Global Registry Services

what are authoritative name servers?

	these are the servers that store the DNS records for a specific domain name and are responsible for responding to DNS queries about that domain. they are consider "authoritative" because they have the most up-to-date information about the domain's IP addresses, mail servers, and other settings

	If you visit the website [www.example.com](http://www.example.com), your browser sends a DNS query to one of the root name servers (e.g., A.root-servers.net). The root server responds with the TLD server for .com (VeriSign's Global Registry Services). Your browser then sends another DNS query to VeriSign, which responds with the authoritative name server(s) for example.com. Finally, your browser sends a request to one of those authoritative name servers, which returns the IP address of the website.


what are zones?
what is delegation?
